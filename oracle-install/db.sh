#!/bin/sh
#
#scripts by robin  2013-11-11
#
#silent create  oracle database 
#
#
#
ouser=`groupmems -g dba -l|awk '{print $1}'`
osid=$1

hname=`hostname`
sed '/export ORACLE_SID/d' -i /home/$ouser/.bash_profile >/dev/null 2>&1
sed "/export ORACLE_HOME/ a export ORACLE_SID=$osid" -i /home/$ouser/.bash_profile

source /home/$ouser/.bash_profile

oradata=$2
if [ ! -d $oradata ];then
mkdir $oradata -p
chown $ouser.oinstall $oradata -R
fi

ps -ef|grep ora_|grep -e $osid$ >/dev/null  2>&1
if  [ $? -eq 0 ];then
  echo "$osid exists. please enter other ORACLE_SID ."
  echo "such as :  updb"
else 
 if  [ "$osid" != "" ];then
  echo  "---------------------create db  starting -----------------------------"
    if [ -e $ORACLE_HOME/network/admin/listener.ora ];then
        grep SID_NAME $ORACLE_HOME/network/admin/listener.ora|grep $osid >/dev/null 2>&1
        if [ $? -ne 0 ];then
        echo "
    (SID_DESC =
      (GLOBAL_DBNAME = $osid)
      (ORACLE_HOME = $ORACLE_HOME)
      (SID_NAME = $osid)
    )">/tmp/s.txt
        sed '/(SID_LIST =/r /tmp/s.txt' -i $ORACLE_HOME/network/admin/listener.ora        
       fi 
    else
       su - $ouser -c "cat > $ORACLE_HOME/network/admin/listener.ora <<-EOF

# listener.ora Network Configuration File: $ORACLE_HOME/network/admin/listener.ora
# Generated by Oracle configuration tools.

SID_LIST_LISTENER =
  (SID_LIST =
    (SID_DESC =
      (GLOBAL_DBNAME = $osid)
      (ORACLE_HOME = $ORACLE_HOME)
      (SID_NAME = $osid)
    )
  )

LISTENER =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = $hname)(PORT = 1521))
  )

ADR_BASE_LISTENER = $ORACLE_BASE
EOF
"
fi

su - $ouser  -c "lsnrctl  stop;lsnrctl  start" >/dev/null 2>&1

rm $ORACLE_BASE/cfgtoollogs/dbca/silent.log_`date +Y-%m-%d`*  -rf >/dev/null 2>&1
su  - $ouser  -c "dbca -silent -createDatabase -templateName $ORACLE_HOME/assistants/dbca/templates/General_Purpose.dbc -gdbname $osid -sid $osid -syspassword oracleSys1 -systempassword oracleSys2 -emConfiguration LOCAL -sysmanpassword oracleSys3 -dbsnmppassword oracleSys4 -characterSet al32utf8 -datafileDestination $oradata" 

ocount=1
until  grep -e "100%" $ORACLE_BASE/cfgtoollogs/dbca/$osid/$osid.log >/dev/null  2>&1
do
sleep 2s
ocount=$ocount+1
done

sleep  20s
  ps -ef|grep ora_|grep -e $osid$|head  -n 5

cat >/etc/init.d/$osid <<-EOF
#!/bin/bash
#
# oracle Bring up/down oracle database
#
# chkconfig: 2345 99 10
# description: Activates/Deactivates all oracle configured to \
# start at boot time.
# 
# script by robin 2013-11-11
#
#
 
. /etc/init.d/functions


start(){
	if ps aux | grep ora_|grep \$osid | grep -v grep &>/dev/null
	then
		echo -n $"cannot start database: database \$osid is already running."
		failure $"cannot start database: database \$osid is already running."
		echo
		exit 1
	else
		echo -n $"Starting Database: "
                sed 's/:Y$/:N'  -i /etc/oratab >/dev/null 2>&1
                sed "/\$osid:/s/:N$/:Y/" -i /etc/oratab >/dev/null 2>&1
		daemon su - \$ORA_OWNER -c "dbstart" && touch /var/lock/subsys/`basename $0`
		echo 
	fi
	
}
stop(){
	if ps aux | grep ora_ |grep \$osid | grep -v grep &>/dev/null
	then
		echo -n $"Stoping Database: "
                sed 's/:Y$/:N'  -i /etc/oratab >/dev/null 2>&1
                sed '/\$osid:/s/:N$/:Y/' -i /etc/oratab >/dev/null 2>&1
		daemon su - \$ORA_OWNER -c "dbshut" && rm -f /var/lock/subsys/`basename $0`
		echo
	else
		echo -n $"cannot stop database:Database \$osid is not already running."
		failure $"cannot stop database:Database \$osid is not already running."
		echo
		exit 1
	fi
}

status()
{
for i in \`ps -ef|grep ora_|grep -v grep|cut -d '_' -f3|sort|uniq\`
do
echo -e "instance \033[49;1;31;5m \$i \033[0m is running...... ";
done
}

ORA_OWNER=`groupmems -g dba -l|awk '{print $1}'`
osid=$osid
case "\$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
        status
        ;;
    emstart)
	su - \$ORA_OWNER  -c 'export ORACLE_SID=\$osid;emctl status dbconsole &>/dev/null && echo "OEM is already running" || emctl start dbconsole'
	;;
    emstop)
	su - \$ORA_OWNER  -c 'export ORACLE_SID=\$osid;emctl status dbconsole &>/dev/null && emctl stop dbconsole || echo "OEM is not running"'
	;;
    emstatus)
       su - \$ORA_OWNER  -c 'export ORACLE_SID=\$osid;emctl status dbconsole|grep  -A1 http'
       ;;
    lsnstart)
	su - \$ORA_OWNER  -c  'lsnrctl status &>/dev/null && echo "listen is already running" || lsnrctl start &>/dev/null'
	;;
    lsnstop)
	su - \$ORA_OWNER  -c  'lsnrctl status &>/dev/null && lsnrctl stop &>/dev/null || echo "lsnrctl is not already running"'
	;;
    lsnstatus)
        su - \$ORA_OWNER  -c  'lsnrctl status|grep Instance'
        ;;
	*)
	echo "USAGE: \$0 {start|stop|lsnstart|lsnstop|emstart|emstop|isqlstart|isqlstop}"
	echo -e "\tstart     : database start"
	echo -e "\tstop      : database stop"
	echo -e "\tstatus    : database status"
	echo -e "\tlsnstart  : listen start"
	echo -e "\tlsnstop   : listen stop"
	echo -e "\tlsnstatus : listen status"
	echo -e "\temstart   : OEM start"
	echo -e "\temstop    : OEM stop"
	echo -e "\temstatus  : OEM status"
esac

EOF
chmod +x /etc/init.d/$osid
chkconfig  $osid on
  echo  "---------------------create db  successfull --------------------------"
  echo  "you may use /etc/init.d/$osid script to auto start|stop database $osid"
else 
 echo "please enter ORACLE_SID ."
 echo "such as  updb "
fi
fi

umount  /robin  >/dev/null 2>&1
rm /robin  >/dev/null 2>&1

